#!/bin/bash

# üöÄ Script de Execu√ß√£o - Sistema de Rastreamento
# Cria ambiente e executa a aplica√ß√£o

set -e

# Cores
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
RED='\033[0;31m'
NC='\033[0m'

print_message() {
    echo -e "${2}${1}${NC}"
}

print_header() {
    echo -e "\n${BLUE}üöÄ SISTEMA DE RASTREAMENTO DE ENTREGAS${NC}"
    echo -e "${BLUE}=====================================${NC}\n"
}

# Verifica se Docker est√° instalado
check_docker() {
    if ! command -v docker &> /dev/null; then
        print_message "‚ùå Docker n√£o encontrado!" $RED
        print_message "üí° Instale o Docker antes de continuar" $YELLOW
        exit 1
    fi

    if ! command -v docker compose &> /dev/null; then
        print_message "‚ùå Docker Compose n√£o encontrado!" $RED
        print_message "üí° Instale o Docker Compose antes de continuar" $YELLOW
        exit 1
    fi
}

# Cria diret√≥rios necess√°rios
create_directories() {
    print_message "üìÅ Criando diret√≥rios necess√°rios..." $BLUE
    mkdir -p mapas logs
    print_message "‚úÖ Diret√≥rios criados" $GREEN
}

# Inicia os servi√ßos
start_services() {
    print_message "üê≥ Iniciando servi√ßos Docker..." $BLUE
    
    # Para servi√ßos existentes se houver
    docker compose down 2>/dev/null || true
    
    # Inicia servi√ßos
    docker compose up -d
    
    print_message "‚úÖ Servi√ßos iniciados!" $GREEN
    print_message "üìä MongoDB: localhost:27017" $YELLOW
    print_message "üóÑÔ∏è  Usu√°rio: admin / rastreamento123" $YELLOW
}

# Aguarda MongoDB ficar pronto
wait_for_mongodb() {
    print_message "‚è≥ Aguardando MongoDB ficar pronto..." $BLUE
    
    # Aguarda at√© 60 segundos
    for i in {1..60}; do
        if docker compose exec -T mongodb mongosh --eval "db.adminCommand('ping')" >/dev/null 2>&1; then
            print_message "‚úÖ MongoDB est√° pronto!" $GREEN
            return 0
        fi
        sleep 1
        echo -n "."
    done
    
    print_message "‚ùå Timeout aguardando MongoDB" $RED
    exit 1
}

# Executa a aplica√ß√£o
run_application() {
    print_message "üöÄ Iniciando aplica√ß√£o..." $BLUE
    
    # Executa a aplica√ß√£o no container
    docker compose exec rastreamento python app_simples.py
}

# Fun√ß√£o principal
main() {
    print_header
    
    print_message "Este script ir√°:" $YELLOW
    print_message "1. Verificar Docker" $YELLOW
    print_message "2. Criar diret√≥rios necess√°rios" $YELLOW
    print_message "3. Iniciar servi√ßos (MongoDB + Aplica√ß√£o)" $YELLOW
    print_message "4. Executar o sistema de rastreamento" $YELLOW
    
    echo
    read -p "Deseja continuar? (S/n): " -n 1 -r
    echo
    
    if [[ $REPLY =~ ^[Nn]$ ]]; then
        print_message "Opera√ß√£o cancelada." $YELLOW
        exit 0
    fi
    
    # Executa etapas
    check_docker
    create_directories
    start_services
    wait_for_mongodb
    run_application
}

# Executa fun√ß√£o principal
main "$@"
